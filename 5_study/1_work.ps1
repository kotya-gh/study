# -------------------------------------------------
# 分岐
#
# ここでは分岐について紹介します。
# このファイルをWindows PowerShell画面にドラッグ・アンド・ドロップして、エンターキーを押してみましょう
# -------------------------------------------------

# 分岐とは、条件にしたがって命令文を実行するしくみです。分岐を作成するには、いくつかの方法があります。

# -------------------------------------------------
# IF文
# -------------------------------------------------

# IF文はもっとも代表的な分岐文です。括弧内に条件を記入します。
# -gt は greater than の略で、A -gt B は「AがBより大きいとき」を表します。

if(2 -gt 1){
    Write-Host "条件に一致しているので、この命令は実行されます。"
}

if(2 -gt 3){
    Write-Host "条件に一致しないので、この命令は実行されません。"
}

# 複数の条件をつなげることもできます。その場合はelseif文をつかいます。

if(2 -gt 3){
    Write-Host "条件に一致しないので、この命令は実行されません。"
}elseif(2 -gt 1){
    Write-Host "条件に一致しているので、この命令は実行されます。"
}

# 条件に一致しない場合の処理は、else文をつかいます。

if(2 -gt 3){
    Write-Host "条件に一致しないので、この命令は実行されません。"
}else{
    Write-Host "最後まで一致しない場合、この命令が実行されます。"
}

if(2 -gt 3){
    Write-Host "条件に一致しないので、この命令は実行されません。"
}elseif(2 -gt 1){
    Write-Host "条件に一致しているので、この命令は実行されます。"
}else{
    Write-Host "最後まで一致しない場合、この命令が実行されます。"
}

# 変数を使った比較もできます。

[int]$hensuu = 1
if($hensuu -gt 3){
    Write-Host "条件に一致しないので、この命令は実行されません。"
}else{
    Write-Host "最後まで一致しない場合、この命令が実行されます。"
}

# -------------------------------------------------
# 問題
# 「$hensuu」が1以上のとき、「OK」と表示し、それ以外のとき「NG」と表示する分岐をつくってみましょう。
# ヒント：「PowerShell」、「比較演算子」などでGoogleで検索してみよう。
# -------------------------------------------------

Write-Host "答え"
Write-Host ""