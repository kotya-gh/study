# -------------------------------------------------
# ループ
#
# ここではループについて紹介します。
# このファイルをWindows PowerShell画面にドラッグ・アンド・ドロップして、エンターキーを押してみましょう
# -------------------------------------------------

# ループとは、条件にしたがって命令文を繰り返すしくみです。ループを作成するには、いくつかの方法があります。

# -------------------------------------------------
# FOR文
# -------------------------------------------------

# FOR文はもっとも代表的な分岐文です。

# for(A ; B; C) の「A」は、ループ前に実行する命令を記入します。
# 例では、変数 $i に1を格納しています。

# 「B」はループを続ける条件を記入します。条件に一致するとき、{}内の命令を実行します。
# 例では、変数 $i が10以下のとき、ループを続ける条件としています。

# 「C」は{}内の命令が完了するごとに実行する命令を記入します。
# 例では、$i の数字を1加算します。（インクリメントをGoogleで調べてみましょう）

for([int]$i=1; $i -le 10; $i++){
    Write-Host ("今" + $i + "回目")
    Write-Host "ですよ。"
}
Write-Host ""

# for(A ; B; C) の「A」、「B」、「C」の命令や条件は全て記入する必要はありません。
# 例では「A」を記入していません。前の処理で$iは11になっているので、「今11回目」から表示されます。

for(; $i -le 20; $i++){
    Write-Host ("今" + $i + "回目")
}
Write-Host ""

# ループ内で分岐をつかうこともできます。
# $jは整数型のため、文字列として表示するために、型をstringに変換しています。

for([int]$j=0; $j -lt 10; $j++){
    if($j -gt 5){
        Write-Host ([string]$j + "は5より大きいので表示します。")
    }    
}
Write-Host ""

# -------------------------------------------------
# 問題
# FORを使って、１から１０の整数のうち、偶数を表示してみましょう。（表示例「2は偶数です。」）
# ヒント：数字を２で割った余りが０のとき、その数字は偶数です。
# -------------------------------------------------

Write-Host "答え"
Write-Host ""